import "platform:/plugin/org.moflon.demo.mgt.doublelinkedlistmodel/model/Doublelinkedlistmodel.ecore"

using "DoubleLinkList.mpt"

package org.moflon.demo.mgt.doublelinkedlistmodel

class Node{
   operation deleteNode() : void {
      this : Node // rkluge: Maybe we can omit this local variable and provide an implicit 'this' (as in Java/C++/...)? Actually, this is not a local (and therefore initially unbound) variable - it is *always* bound.
      invoke NodePatterns::deleteNode(this)
      deleteNode()
      return // rkluge: Originally I thought that we could leave this out, but sometimes we may skip out of the control flow of a void-returning function.
   }

   operation insertNodeAfter(newNode : Node) : void {
   	  newNode.insertNodeBefore(this : Node)
      invoke NodePatterns::insertNodeAfter(this : Node, newNode) //rkluge: Should we really allow to mix this?
   }

   operation insertNodeBefore(newNde : Node) : void {
      invoke NodePatterns::insertNodeBefore(newNde, this:Node) // rkluge: this is bound!
   }
}